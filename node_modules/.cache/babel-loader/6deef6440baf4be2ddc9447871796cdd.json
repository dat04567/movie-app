{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport useCheckPrevious from './use-check-previous';\nimport * as SOURCE from \"../constants/source\";\nexport default function useHandleFeatureAndData(items) {\n  const [list, setList] = useState([]);\n  const [isTitle, setIsTitle] = useState(true);\n  const [itemsFeature, setItemsFeature] = useState({});\n  const [showFeature, setShowFeature] = useState(false);\n  const {\n    prevId\n  } = useCheckPrevious(itemsFeature);\n\n  // save data\n  useEffect(() => {\n    var _items$data;\n    const listUrl = (_items$data = items.data) === null || _items$data === void 0 ? void 0 : _items$data.map(value => {\n      let obj = {\n        id: value.id,\n        backdrop_path: `${SOURCE.BASE_IMG_URL}${value.backdrop_path}`,\n        overview: value.overview,\n        name: value.name || value.original_name || value.title,\n        vote_count: value.vote_count,\n        vote_average: value.vote_average,\n        release_date: value.release_date || value.first_air_date,\n        poster_path: `${SOURCE.BASE_IMG_URL}${value.poster_path}`\n      };\n      // if title Originals is poster then take backdrop_path and title not emty\n      if (!items.title) {\n        setIsTitle(false);\n      }\n      return obj;\n    });\n    // is listUrl is not empty\n    if (listUrl) {\n      setList(listUrl);\n    }\n  }, [items, isTitle]);\n\n  // set ItemFeature and show Features\n  const handleCompleteFeature = items => {\n    if (prevId.current === items.id || !prevId.current) {\n      if (showFeature) {\n        setShowFeature(false);\n      } else {\n        setShowFeature(true);\n      }\n    } else {\n      setShowFeature(true);\n    }\n    setItemsFeature(items);\n  };\n  return {\n    handleCompleteFeature,\n    list,\n    isTitle,\n    itemsFeature,\n    showFeature,\n    setShowFeature\n  };\n}","map":{"version":3,"names":["useEffect","useState","useCheckPrevious","SOURCE","useHandleFeatureAndData","items","list","setList","isTitle","setIsTitle","itemsFeature","setItemsFeature","showFeature","setShowFeature","prevId","_items$data","listUrl","data","map","value","obj","id","backdrop_path","BASE_IMG_URL","overview","name","original_name","title","vote_count","vote_average","release_date","first_air_date","poster_path","handleCompleteFeature","current"],"sources":["/Users/mac/Library/CloudStorage/OneDrive-IndustrialUniversityofHoChiMinhCity/Documents/Funix_ReactJs/asm2/src/hooks/use-handle-feature-and-data.js"],"sourcesContent":["import {useEffect,useState} from \"react\";\nimport useCheckPrevious from './use-check-previous';\nimport * as SOURCE from \"../constants/source\";\n\nexport default function useHandleFeatureAndData(items) {\n\n   const [list, setList] = useState([]);\n   const [isTitle, setIsTitle] = useState(true);\n   const [itemsFeature, setItemsFeature] = useState({})\n   const [showFeature , setShowFeature] = useState(false);\n   const {prevId} = useCheckPrevious(itemsFeature);\n\n   // save data\n   useEffect(() => {\n      const listUrl = items.data?.map((value) => {\n         let obj = {\n            id: value.id,\n            backdrop_path: `${SOURCE.BASE_IMG_URL}${value.backdrop_path}`,\n            overview: value.overview,\n            name: value.name || value.original_name || value.title,\n            vote_count: value.vote_count,\n            vote_average: value.vote_average,\n            release_date: value.release_date || value.first_air_date,\n            poster_path: `${SOURCE.BASE_IMG_URL}${value.poster_path}`,\n         };\n         // if title Originals is poster then take backdrop_path and title not emty\n         if ( !items.title) {\n            setIsTitle(false);\n         }\n         return obj;\n      });\n      // is listUrl is not empty\n      if (listUrl) {\n         setList(listUrl);\n      }\n   }, [items, isTitle]);\n\n   // set ItemFeature and show Features\n   const handleCompleteFeature = (items) => {\n      if (prevId.current === items.id || !prevId.current) {\n         if (showFeature) {\n            setShowFeature(false);\n         } else {\n            setShowFeature(true);\n         }\n      } else {\n         setShowFeature(true);\n      }\n      setItemsFeature(items);\n   };\n\n\n   return {\n      handleCompleteFeature,\n      list,\n      isTitle,\n      itemsFeature,\n      showFeature,\n      setShowFeature\n   }\n}\n"],"mappings":"AAAA,SAAQA,SAAS,EAACC,QAAQ,QAAO,OAAO;AACxC,OAAOC,gBAAgB,MAAM,sBAAsB;AACnD,OAAO,KAAKC,MAAM,MAAM,qBAAqB;AAE7C,eAAe,SAASC,uBAAuBA,CAACC,KAAK,EAAE;EAEpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACW,WAAW,EAAGC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM;IAACa;EAAM,CAAC,GAAGZ,gBAAgB,CAACQ,YAAY,CAAC;;EAE/C;EACAV,SAAS,CAAC,MAAM;IAAA,IAAAe,WAAA;IACb,MAAMC,OAAO,IAAAD,WAAA,GAAGV,KAAK,CAACY,IAAI,cAAAF,WAAA,uBAAVA,WAAA,CAAYG,GAAG,CAAEC,KAAK,IAAK;MACxC,IAAIC,GAAG,GAAG;QACPC,EAAE,EAAEF,KAAK,CAACE,EAAE;QACZC,aAAa,EAAG,GAAEnB,MAAM,CAACoB,YAAa,GAAEJ,KAAK,CAACG,aAAc,EAAC;QAC7DE,QAAQ,EAAEL,KAAK,CAACK,QAAQ;QACxBC,IAAI,EAAEN,KAAK,CAACM,IAAI,IAAIN,KAAK,CAACO,aAAa,IAAIP,KAAK,CAACQ,KAAK;QACtDC,UAAU,EAAET,KAAK,CAACS,UAAU;QAC5BC,YAAY,EAAEV,KAAK,CAACU,YAAY;QAChCC,YAAY,EAAEX,KAAK,CAACW,YAAY,IAAIX,KAAK,CAACY,cAAc;QACxDC,WAAW,EAAG,GAAE7B,MAAM,CAACoB,YAAa,GAAEJ,KAAK,CAACa,WAAY;MAC3D,CAAC;MACD;MACA,IAAK,CAAC3B,KAAK,CAACsB,KAAK,EAAE;QAChBlB,UAAU,CAAC,KAAK,CAAC;MACpB;MACA,OAAOW,GAAG;IACb,CAAC,CAAC;IACF;IACA,IAAIJ,OAAO,EAAE;MACVT,OAAO,CAACS,OAAO,CAAC;IACnB;EACH,CAAC,EAAE,CAACX,KAAK,EAAEG,OAAO,CAAC,CAAC;;EAEpB;EACA,MAAMyB,qBAAqB,GAAI5B,KAAK,IAAK;IACtC,IAAIS,MAAM,CAACoB,OAAO,KAAK7B,KAAK,CAACgB,EAAE,IAAI,CAACP,MAAM,CAACoB,OAAO,EAAE;MACjD,IAAItB,WAAW,EAAE;QACdC,cAAc,CAAC,KAAK,CAAC;MACxB,CAAC,MAAM;QACJA,cAAc,CAAC,IAAI,CAAC;MACvB;IACH,CAAC,MAAM;MACJA,cAAc,CAAC,IAAI,CAAC;IACvB;IACAF,eAAe,CAACN,KAAK,CAAC;EACzB,CAAC;EAGD,OAAO;IACJ4B,qBAAqB;IACrB3B,IAAI;IACJE,OAAO;IACPE,YAAY;IACZE,WAAW;IACXC;EACH,CAAC;AACJ"},"metadata":{},"sourceType":"module"}