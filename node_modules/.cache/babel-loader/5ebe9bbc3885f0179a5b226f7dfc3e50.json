{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Library/CloudStorage/OneDrive-IndustrialUniversityofHoChiMinhCity/Documents/Funix_ReactJs/asm2/src/components/search/FormSearch.jsx\";\nimport React, { useState } from \"react\";\nimport SearchInput from \"./Searchnput\";\nimport { Form, FormContainer, Hr, BtnSearch, BtnReset, BtnContainer, Erro } from \"./styles\";\nimport useInput from \"../../hooks/use-input\";\nimport useFetchContent from \"../../hooks/use-fetch-content\";\nimport { BASE_URL, API_KEY } from \"../../service/requests\"; // get API key and base url \nimport MovieSearch from \"./MovieSearch\";\n// form seacrh\nexport default function FormSearch() {\n  const {\n    fetchData\n  } = useFetchContent();\n  const [data, setData] = useState([]);\n\n  // check validation\n  const {\n    value: enteredSearch,\n    isValid: enteredSearchIsValid,\n    hasError: SearchInputHasError,\n    valueChangeHandler: SearchChangedHandler,\n    inputBlurHandler: SearchBlurHandler,\n    reset: resetSearchInput\n  } = useInput(value => value.trim() !== \"\");\n  const fetchDataSearch = async function () {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${enteredSearch}&language=en-US`;\n    const {\n      results\n    } = await fetchData(url);\n    setData(results);\n  };\n\n  // get api fect search\n  const submitHandler = event => {\n    event.preventDefault();\n    fetchDataSearch();\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    onBlur: SearchBlurHandler,\n    onChange: SearchChangedHandler,\n    value: enteredSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Hr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }\n  }), SearchInputHasError && /*#__PURE__*/React.createElement(Erro, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 40\n    }\n  }, \"Search must not be empty.\"), /*#__PURE__*/React.createElement(BtnContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(BtnReset, {\n    onClick: resetSearchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, \" RESET \"), /*#__PURE__*/React.createElement(BtnSearch, {\n    type: \"submit\",\n    disabled: !enteredSearchIsValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, \"SEARCH\")))), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: \"white\",\n      fontSize: \"1.8rem\",\n      marginBottom: \"2ren\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }\n  }, \"Search Result\"), data && /*#__PURE__*/React.createElement(MovieSearch, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","SearchInput","Form","FormContainer","Hr","BtnSearch","BtnReset","BtnContainer","Erro","useInput","useFetchContent","BASE_URL","API_KEY","MovieSearch","FormSearch","fetchData","data","setData","value","enteredSearch","isValid","enteredSearchIsValid","hasError","SearchInputHasError","valueChangeHandler","SearchChangedHandler","inputBlurHandler","SearchBlurHandler","reset","resetSearchInput","trim","fetchDataSearch","url","results","submitHandler","event","preventDefault","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onBlur","onChange","onClick","type","disabled","style","color","fontSize","marginBottom"],"sources":["/Users/mac/Library/CloudStorage/OneDrive-IndustrialUniversityofHoChiMinhCity/Documents/Funix_ReactJs/asm2/src/components/search/FormSearch.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport SearchInput from \"./Searchnput\";\nimport {\n   Form,\n   FormContainer,\n   Hr,\n   BtnSearch,\n   BtnReset,\n   BtnContainer,\n   Erro,\n} from \"./styles\";\nimport useInput from \"../../hooks/use-input\";\nimport useFetchContent from \"../../hooks/use-fetch-content\";\nimport { BASE_URL, API_KEY } from \"../../service/requests\"; // get API key and base url \nimport MovieSearch from \"./MovieSearch\";\n// form seacrh\nexport default function FormSearch() {\n   const { fetchData } = useFetchContent();\n   const [data, setData] = useState([]);\n\n\n   // check validation\n   const {\n      value: enteredSearch,\n      isValid: enteredSearchIsValid,\n      hasError: SearchInputHasError,\n      valueChangeHandler: SearchChangedHandler,\n      inputBlurHandler: SearchBlurHandler,\n      reset: resetSearchInput,\n   } = useInput((value) => value.trim() !== \"\");\n\n   const fetchDataSearch = async function () {\n      const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${enteredSearch}&language=en-US`;\n      const { results } = await fetchData(url);\n      setData(results);\n   };\n\n   // get api fect search\n   const submitHandler = (event) => {\n      event.preventDefault();\n      fetchDataSearch();\n   };\n\n   return (\n      <>\n         <FormContainer>\n            <Form onSubmit={submitHandler}>\n               <SearchInput\n                  onBlur={SearchBlurHandler}\n                  onChange={SearchChangedHandler}\n                  value={enteredSearch}\n               />\n               <Hr />\n               {SearchInputHasError && <Erro>Search must not be empty.</Erro>}\n               <BtnContainer>\n                  <BtnReset onClick={resetSearchInput}> RESET </BtnReset>\n                  <BtnSearch type=\"submit\" disabled={!enteredSearchIsValid}>\n                     SEARCH\n                  </BtnSearch>\n               </BtnContainer>\n            </Form>\n          \n         </FormContainer>\n         <h2 style={{color: \"white\",fontSize:\"1.8rem\",marginBottom:\"2ren\"}}>Search Result</h2>\n         {/* results */}\n         {data &&   <MovieSearch data = {data} />}\n      </>\n   );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}